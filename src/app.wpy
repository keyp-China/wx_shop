<style lang="less">

</style>

<script>
  import wepy from 'wepy'
  import 'wepy-async-function'
  import './utils/index'

  export default class extends wepy.app {
    config = {
      pages: [
        'pages/tabs/home',
        'pages/tabs/cates',
        'pages/tabs/search',
        'pages/tabs/cart',
        'pages/tabs/my',
        'pages/goods_detail/index',
        'pages/goods_list/index',
        'pages/order/index'
      ],
      "usingComponents": {
        "van-sidebar": "./components/vant/sidebar/index",
        "van-sidebar-item": "./components/vant/sidebar-item/index",
        "van-grid": "./components/vant/grid/index",
        "van-grid-item": "./components/vant/grid-item/index",
        "van-search": "./components/vant/search/index",
        "van-cell": "./components/vant/cell/index",
        "van-cell-group": "./components/vant/cell-group/index",
        "van-icon": "./components/vant/icon/index",
        "van-tag": "./components/vant/tag/index",
        "van-card": "./components/vant/card/index",
        "van-tab": "./components/vant/tab/index",
        "van-tabs": "./components/vant/tabs/index",
        "van-goods-action": "./components/vant/goods-action/index",
        "van-goods-action-icon": "./components/vant/goods-action-icon/index",
        "van-goods-action-button": "./components/vant/goods-action-button/index",
        "van-stepper": "./components/vant/stepper/index",
        "van-checkbox": "./components/vant/checkbox/index",
        "van-swipe-cell": "./components/vant/swipe-cell/index",
        "van-submit-bar": "./components/vant/submit-bar/index",
        "van-button": "./components/vant/button/index"
      },
      window: {
        backgroundTextStyle: 'light',
        navigationBarBackgroundColor: '#FF0000',
        navigationBarTitleText: '优购商城',
        navigationBarTextStyle: 'white'
      },
      tabBar: {
        list: [
          {
            pagePath: 'pages/tabs/home',
            text: '首页',
            iconPath: './assets/icons/home.png',
            selectedIconPath: './assets/icons/home-active.png'
          },
          {
            pagePath: 'pages/tabs/cates',
            text: '分类',
            iconPath: './assets/icons/cates.png',
            selectedIconPath: './assets/icons/cates-active.png'
          },
          {
            pagePath: 'pages/tabs/search',
            text: '搜索',
            iconPath: './assets/icons/search.png',
            selectedIconPath: './assets/icons/search-active.png'
          },
          {
            pagePath: 'pages/tabs/cart',
            text: '购物车',
            iconPath: './assets/icons/cart.png',
            selectedIconPath: './assets/icons/cart-active.png'
          },
          {
            pagePath: 'pages/tabs/my',
            text: '我的',
            iconPath: './assets/icons/my.png',
            selectedIconPath: './assets/icons/my-active.png'
          }
        ]
      }
    }

    globalData = {
      cart: []
    }

    // 加入购物车
    addToCart(goods){
      // 判断购物车是否存在
      const index = this.getIndexById(goods.goods_id)
      if(index == -1) {
        const goodsObj = {
          id: goods.goods_id, // 商品id
          name: goods.goods_name, // 商品名称
          price: goods.goods_price, // 商品价格
          count: 1, // 商品数量
          pic: goods.goods_big_logo, // 商品图片
          isCheck: true // 是否购买
        }
        this.globalData.cart.push(goodsObj);
      } else {
        this.globalData.cart[index].count++
      }
      this.saveCart()
      wepy.baseToast('加入购物车成功','success')
    }

    // 改变购物车商品的数量
    updateCount(id,count){
      this.globalData.cart[this.getIndexById(id)].count = count
      this.saveCart()
    }

    // 改变商品是否购买状态
    updateIsCheck(id,isCheck){
      this.globalData.cart[this.getIndexById(id)].isCheck = isCheck
      this.saveCart()
    }

    // 删除商品信息
    deleteItem(id){
      this.globalData.cart.splice(this.getIndexById(id),1)
      this.saveCart()
    }

    // 获取索引下标
    getIndexById(id){
      return this.globalData.cart.findIndex(item => item.id == id)
    }

    // 购物车本地存储
    saveCart(){
      wepy.setStorageSync('cart',this.globalData.cart)
      this.setTabBarBadge()
    }

    // 点击全选修改状态
    checkAll(status){
      this.globalData.cart.forEach(item => item.isCheck=status)
      this.saveCart()
    }

    constructor() {
      super()
      this.use('requestfix')
      this.use('promisify')
      // 拦截request请求
      this.intercept('request', {
        // 发出请求时的回调函数
        config(p) {
          wepy.showLoading({ title: "数据正在加载中..." })

          // 添加token
          if (wepy.getStorageSync('token')) {
            p.header = {
              Authorization: wepy.getStorageSync('token')
            }
          }
          
          return p;
        },
        success(p) { return p; },
        fail(p) { return p; },
        // 请求完成时的回调函数(请求成功或失败都会被执行)
        complete(p) {
          wepy.hideLoading()
        }
      })
    }

    // 设置购物车数量显示
    setTabBarBadge(){
      let total = 0
      this.globalData.cart.forEach(item=>{
        if(item.isCheck){
          total += item.count
        }
      })
      wepy.setTabBarBadge({
        index: 3,
        text: total.toString()
      }).catch(err=>err)
    }

    onLaunch() {
      // 从本地获取购物车的值
      this.globalData.cart = wepy.getStorageSync('cart') || []
      // 应用加载时
      this.setTabBarBadge()
    }
  }
</script>